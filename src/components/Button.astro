---
interface Props {
  glowingBorder?: boolean;
  classname?: string;
}

const { glowingBorder = false, classname = "" } = Astro.props;
---

<button
  class:list={[
    "flex items-center justify-center py-2 px-4 rounded-3xl overflow-hidden text-white",
    classname,
    {
      "glowing-border": glowingBorder,
    },
  ]}
>
  {glowingBorder && <div class="border-layer" />}
  <slot />
</button>
<style>
  @keyframes btnRotateAnimation {
    100% {
      transform: translate(-50%, -50%) rotate(1turn);
    }
  }

  button {
    position: relative;
    cursor: pointer;
  }

  .glowing-border {
    &::before {
      content: "";
      position: absolute;
      z-index: -2;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      width: 500%;
      height: 500%;
      background-color: transparent;
      background-repeat: no-repeat;
      background-position: 0 0;
      background-image: conic-gradient(
        transparent,
        var(--body-bg-light),
        transparent 30%
      );
      animation: btnRotateAnimation 4s linear infinite;
    }

    &::after {
      content: "";
      position: absolute;
      z-index: -1;
      left: 1.5px;
      top: 1.5px;
      width: calc(100% - 3px);
      height: calc(100% - 3px);
      background: var(--body-bg);
      backdrop-filter: blur(80px);
      border-radius: 100px;
    }
  }

  .border-layer {
    position: absolute;
    z-index: -3;
    left: 0px;
    top: 0px;
    width: calc(100% - 0px);
    height: calc(100% - 0px);
    background: #444444;
    border-radius: 100px;
  }
</style>
