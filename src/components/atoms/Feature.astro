---
interface Props {
  title: string;
  description: string;
  image: ImageMetadata;
  link: string;
}

const { title, description, image, link } = Astro.props;

import Image from "astro/components/Image.astro";
import Lamp from "./Lamp.astro";
---

<div class="relative flex-shrink-0 md:mt-40 mt-40">
  <Lamp>
    <h3 class="text-3xl md:text-5xl font-semibold text-center">
      {title}
    </h3>
    <p
      class="text-sm md:text-base text-center max-w-[340px] text-gray-400 m-auto pt-4"
    >
      {description}
    </p>
  </Lamp>
  <div
    class="flex-shrink-0 relative feature-image-wrapper m-auto max-w-2xl -mt-10 p-3 md:p-0 flex items-center justify-center"
  >
    <Image src={image} alt={title} class="feature-image rounded-xl" loading="eager" />
  </div>
</div>

<style>
  .negative {
    display: block;
    width: 1px;
    height: 1px;
    min-width: 1px;
    min-height: 1px;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    margin-top: calc(-248px - 1px);
    margin-left: calc(0px - 1px);
  }

  @supports (animation-timeline: view()) {
    .feature-image-wrapper {
      perspective: 500px;
      perspective-origin: 50% 40%;
      view-timeline-name: --feature-image;
      view-timeline-axis: block;
    }

    .feature-image {
      will-change: transform;
      transform-style: preserve-3d;
      animation: feature auto linear;
      animation-timeline: --feature-image;
      animation-range: entry 10% cover 100%;
    }
  }

  @keyframes feature {
    from {
      transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(20deg)
        rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg);
    }
    to {
      transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(-15deg)
        rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg);
    }
  }
</style>
